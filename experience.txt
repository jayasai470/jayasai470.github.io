//gamehub
Developed a low-latency game streaming platform ensuring high-performance delivery.
Engineered automation for virtual game machine provisioning using KubeVirt (Kubernetes + Virtual Machines) for both AWS and OCI metal machines.
Implemented game execution on virtual machines with both Nvidia and AMD GPUs using vGPU/SR-IOV on Windows/Linux systems.
Automated the creation of optimized EKS/OKE Elastic Machine Images (EMIs) tailored for game streaming using Packer, including host GPU driver management.
Streamlined virtual machine image generation in qcow2 format with Packer to enhance deployment efficiency.
Innovated an economical method to make game machines accessible by designing a custom Kubernetes host port operator.
Established and managed a Rook + Ceph storage cluster to facilitate Read-Only Many (ROX) persistent volume claims, compensating for AWS's lack of native support.
Customized the Puppetlabs pvpool controller for Kubernetes volume snapshot management, improving data recovery processes.
Containerized game software, integrating custom tweaks to enable the execution of Windows games on Linux platforms using Wine technology.

//geny
Developed a GPT-based movie recommendation system to enhance user experience through personalized suggestions.
Conducted research and development on custom Retrieval-Augmented Generation (RAG) techniques aimed at delivering tailored movie recommendations.
Utilized the LangChain framework in conjunction with Azure OpenAI and OpenAI's language model providers to implement sophisticated AI-driven features.
Integrated various vector database stores, including Azure AI Search and Redis vector module, to optimize data retrieval and storage processes.
Transitioned the existing logging and observability infrastructure to an OpenTelemetry-based approach, enabling unified collection and analysis of logs, metrics, and traces.

//podcast & gearhub
Developed Node.js backend services and successfully deployed them on Kubernetes (EKS) utilizing Helm charts.
Developed an indoor positioning system using beacon technology for proximity detection and contributed to contact tracing solutions for wearable devices.
Engineered infrastructure with Terraform to manage global traffic and ensure compliance with regulatory standards.
Utilized Apache Flink for real-time stream processing and implemented Complex Event Processing (CEP) for advanced event pattern detection.
Managed private NPM libraries via Sinopia Artifactory and established a private Helm chart repository on Amazon S3.
Architectured backend components and services to enhance B2B applications for Samsung wearables.
Designed and implemented microservices using a Function-as-a-Service (FAAS) model, adopting an event-driven architecture hosted on AWS, with deployment automation via Serverless framework.
Built fully reactive applications leveraging Spring WebFlux, MongoDB, and Kafka for responsive and scalable solutions.
Crafted and deployed GraphQL APIs to optimize data retrieval and manipulation for client applications.
Automated the deployment process for single-page React applications using a combination of CDN, Amazon S3, Jenkins, and CircleCI for efficient content delivery.

//splus
Developed and deployed a serverless stack across multiple global regions, focusing on minimizing latency.
Implemented GeoSpatial queries and GeoHashing for Geofence and location-based alert functionalities.
Utilized various mapping APIs such as OpenStreetMaps, Leaflet, Google Maps, and HERE Maps for geocoding and data visualization.
Gained comprehensive experience in app development, including working with client-side, server-side, CMS (Magnolia), persistence layers, and streaming services (Kafka).
Designed and developed a reactive user interface that updates in real-time using Meteor, Handlebars, and MongoDB.
Developed Spring Boot microservices and IoT applications with MQTT protocol for message communication.
Conducted rapid prototyping for proof of concepts with emerging technologies, ensuring their maturity for production-grade deployment on AWS.